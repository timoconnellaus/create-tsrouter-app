{
  "id": "resume-example-starter",
  "name": "Resume Starter",
  "version": "0.0.1",
  "description": "Project starter",
  "author": "Jane Smith <jane.smith@example.com>",
  "license": "MIT",
  "link": "https://github.com/jane-smith/resume-example-starter",
  "shadcnComponents": [],
  "framework": "react-cra",
  "mode": "file-router",
  "routes": [],
  "warning": "",
  "banner": ".starter/banner.png",
  "type": "starter",
  "packageAdditions": {
    "dependencies": {
      "@radix-ui/react-checkbox": "^1.2.2",
      "@radix-ui/react-hover-card": "^1.1.10",
      "@radix-ui/react-separator": "^1.1.4",
      "@radix-ui/react-slot": "^1.2.0",
      "marked": "^15.0.8"
    },
    "devDependencies": {
      "@content-collections/core": "^0.8.2",
      "@content-collections/vite": "^0.2.6"
    }
  },
  "dependsOn": ["start", "shadcn"],
  "typescript": true,
  "tailwind": true,
  "files": {
    "./.gitignore": "node_modules\n.DS_Store\ndist\ndist-ssr\n*.local\n.output\n.content-collections",
    "./app.config.ts": "import { defineConfig } from \"@tanstack/start/config\";\nimport contentCollections from \"@content-collections/vite\";\nimport viteTsConfigPaths from \"vite-tsconfig-paths\";\nimport tailwindcss from \"@tailwindcss/vite\";\n\nconst config = defineConfig({\n  tsr: {\n    appDirectory: \"src\",\n  },\n  vite: {\n    plugins: [\n      contentCollections(),\n      viteTsConfigPaths({\n        projects: [\"./tsconfig.json\"],\n      }),\n      tailwindcss(),\n    ],\n  },\n});\n\nexport default config;\n",
    "./content/education/code-school.md": "---\nschool: Code School\nsummary: Full Stack Development\nstartDate: 2020-01-01\nendDate: 2020-12-31\ntags:\n  [\n    \"Full Stack Development\",\n    \"JavaScript\",\n    \"React\",\n    \"Node.js\",\n    \"Express\",\n    \"MongoDB\",\n  ]\n---\n\nCompleted a comprehensive full stack development course covering JavaScript, React, Node.js, Express, and MongoDB. Gained hands-on experience with modern web development frameworks and databases while building a full stack application.\n",
    "./content/jobs/freelance.md": "---\njobTitle: Frontend Development Consultant\ncompany: Freelance\nlocation: Remote\nstartDate: 2020-01-01\nendDate: 2020-12-31\nsummary: Independent frontend development consultant working with multiple clients on web applications and sites\ndescription:\ntags:\n  [\"React\", \"TypeScript\", \"Frontend Development\", \"JavaScript\", \"CSS\", \"HTML\"]\n---\n\nProvided expert frontend development services to various clients, specializing in React, TypeScript, and modern web technologies. Delivered responsive and performant web applications while maintaining high code quality and best practices.\n",
    "./content/jobs/initech-junior.md": "---\njobTitle: Junior Frontend Developer\ncompany: IniTech\nlocation: Remote\nstartDate: 2021-01-01\nendDate: 2021-12-31\nsummary: Junior frontend developer working on React-based web applications using modern development practices\ndescription:\ntags:\n  [\n    \"React\",\n    \"TypeScript\",\n    \"Frontend Development\",\n    \"JavaScript\",\n    \"TanStack\",\n    \"Web Development\",\n  ]\n---\n\nWorked as a junior frontend developer at IniTech, contributing to React-based web applications. Collaborated with the development team to implement responsive user interfaces, integrate REST APIs, and maintain code quality. Gained hands-on experience with modern frontend technologies and development workflows while working on production applications.\n",
    "./content/jobs/initech-lead.md": "---\njobTitle: Frontend Team Lead\ncompany: IniTech\nlocation: Remote\nstartDate: 2022-01-01\nendDate: 2022-12-31\nsummary: Led a cross-functional team of three engineers in developing and maintaining IniTech's marketing platform, driving technical decisions and implementing modern development practices\ndescription:\ntags:\n  [\n    \"React\",\n    \"TypeScript\",\n    \"Team Leadership\",\n    \"Frontend Architecture\",\n    \"Technical Leadership\",\n    \"Project Management\",\n    \"TanStack\",\n    \"Web Development\",\n  ]\n---\n\nLed the development and maintenance of IniTech's marketing platform as Frontend Team Lead, managing a cross-functional team of three engineers including a backend developer and a DevOps engineer. Key achievements and responsibilities included:\n\n- Architected and implemented a modern React-based marketing platform using TypeScript and TanStack, resulting in a 40% improvement in page load times\n- Managed and mentored a team of three engineers, conducting regular code reviews, sprint planning, and technical guidance\n- Collaborated with marketing stakeholders to define and implement new features while maintaining high code quality and performance standards\n- Established CI/CD pipelines and development workflows in partnership with DevOps, reducing deployment time by 60%\n- Coordinated with the backend developer to design and implement RESTful APIs, ensuring seamless integration between frontend and backend systems\n- Introduced modern development practices including automated testing, component documentation, and performance monitoring\n",
    "./content/jobs/initrode-senior.md": "---\njobTitle: Senior Frontend Developer\ncompany: Initrode\nlocation: Remote\nstartDate: 2024-01-01\nsummary: Developed and architected real-time data visualization features for Initrode's enterprise dashboard platform, implementing a robust WebSocket layer and optimizing performance for large-scale data streams\ndescription:\ntags:\n  [\n    \"React\",\n    \"TypeScript\",\n    \"WebSockets\",\n    \"Real-time Data\",\n    \"System Architecture\",\n    \"Performance Optimization\",\n    \"TanStack\",\n    \"Web Development\",\n  ]\n---\n\nServed as a Senior Frontend Developer on Initrode's Dashboard team, focusing on building high-performance, real-time data visualization features for enterprise clients. Key achievements and responsibilities included:\n\n- Designed and implemented a WebSocket-based real-time data transport layer, enabling live updates for dashboard components with sub-100ms latency\n- Architected and developed a modular dashboard framework using React and TypeScript, supporting dynamic widget composition and real-time data streams\n- Optimized frontend performance for handling large-scale data sets, implementing efficient data structures and virtualization techniques that improved rendering performance by 65%\n- Built reusable charting and visualization components using D3.js and TanStack libraries, supporting real-time updates and complex data transformations\n- Implemented client-side data caching and state management strategies, reducing server load by 40% while maintaining data consistency\n- Developed automated testing suites for WebSocket connections and real-time data flow, achieving 90% test coverage for critical paths\n",
    "./content-collections.ts": "import { defineCollection, defineConfig } from \"@content-collections/core\";\n\nconst jobs = defineCollection({\n  name: \"jobs\",\n  directory: \"content/jobs\",\n  include: \"**/*.md\",\n  schema: (z) => ({\n    jobTitle: z.string(),\n    summary: z.string(),\n    startDate: z.string(),\n    endDate: z.string().optional(),\n    company: z.string(),\n    location: z.string(),\n    tags: z.array(z.string()),\n  }),\n});\n\nconst education = defineCollection({\n  name: \"education\",\n  directory: \"content/education\",\n  include: \"**/*.md\",\n  schema: (z) => ({\n    school: z.string(),\n    summary: z.string(),\n    startDate: z.string(),\n    endDate: z.string().optional(),\n    tags: z.array(z.string()),\n  }),\n});\n\nexport default defineConfig({\n  collections: [jobs, education],\n});\n",
    "./public/headshot-on-white.jpg": "base64::",
    "./src/components/ui/badge.tsx": "import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center justify-center rounded-md border px-2 py-0.5 text-xs font-medium w-fit whitespace-nowrap shrink-0 [&>svg]:size-3 gap-1 [&>svg]:pointer-events-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive transition-[color,box-shadow] overflow-hidden\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground [a&]:hover:bg-primary/90\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground [a&]:hover:bg-secondary/90\",\n        destructive:\n          \"border-transparent bg-destructive text-white [a&]:hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"text-foreground [a&]:hover:bg-accent [a&]:hover:text-accent-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nfunction Badge({\n  className,\n  variant,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"span\"> &\n  VariantProps<typeof badgeVariants> & { asChild?: boolean }) {\n  const Comp = asChild ? Slot : \"span\"\n\n  return (\n    <Comp\n      data-slot=\"badge\"\n      className={cn(badgeVariants({ variant }), className)}\n      {...props}\n    />\n  )\n}\n\nexport { Badge, badgeVariants }\n",
    "./src/components/ui/card.tsx": "import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card\"\n      className={cn(\n        \"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-header\"\n      className={cn(\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-title\"\n      className={cn(\"leading-none font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardAction({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-action\"\n      className={cn(\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-content\"\n      className={cn(\"px-6\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-footer\"\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardAction,\n  CardDescription,\n  CardContent,\n}\n",
    "./src/components/ui/checkbox.tsx": "import * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { CheckIcon } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Checkbox({\n  className,\n  ...props\n}: React.ComponentProps<typeof CheckboxPrimitive.Root>) {\n  return (\n    <CheckboxPrimitive.Root\n      data-slot=\"checkbox\"\n      className={cn(\n        \"peer border-input dark:bg-input/30 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground dark:data-[state=checked]:bg-primary data-[state=checked]:border-primary focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive size-4 shrink-0 rounded-[4px] border shadow-xs transition-shadow outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <CheckboxPrimitive.Indicator\n        data-slot=\"checkbox-indicator\"\n        className=\"flex items-center justify-center text-current transition-none\"\n      >\n        <CheckIcon className=\"size-3.5\" />\n      </CheckboxPrimitive.Indicator>\n    </CheckboxPrimitive.Root>\n  )\n}\n\nexport { Checkbox }\n",
    "./src/components/ui/hover-card.tsx": "\"use client\"\n\nimport * as React from \"react\"\nimport * as HoverCardPrimitive from \"@radix-ui/react-hover-card\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction HoverCard({\n  ...props\n}: React.ComponentProps<typeof HoverCardPrimitive.Root>) {\n  return <HoverCardPrimitive.Root data-slot=\"hover-card\" {...props} />\n}\n\nfunction HoverCardTrigger({\n  ...props\n}: React.ComponentProps<typeof HoverCardPrimitive.Trigger>) {\n  return (\n    <HoverCardPrimitive.Trigger data-slot=\"hover-card-trigger\" {...props} />\n  )\n}\n\nfunction HoverCardContent({\n  className,\n  align = \"center\",\n  sideOffset = 4,\n  ...props\n}: React.ComponentProps<typeof HoverCardPrimitive.Content>) {\n  return (\n    <HoverCardPrimitive.Portal data-slot=\"hover-card-portal\">\n      <HoverCardPrimitive.Content\n        data-slot=\"hover-card-content\"\n        align={align}\n        sideOffset={sideOffset}\n        className={cn(\n          \"bg-popover text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 z-50 w-64 origin-(--radix-hover-card-content-transform-origin) rounded-md border p-4 shadow-md outline-hidden\",\n          className\n        )}\n        {...props}\n      />\n    </HoverCardPrimitive.Portal>\n  )\n}\n\nexport { HoverCard, HoverCardTrigger, HoverCardContent }\n",
    "./src/components/ui/separator.tsx": "import * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Separator({\n  className,\n  orientation = \"horizontal\",\n  decorative = true,\n  ...props\n}: React.ComponentProps<typeof SeparatorPrimitive.Root>) {\n  return (\n    <SeparatorPrimitive.Root\n      data-slot=\"separator-root\"\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"bg-border shrink-0 data-[orientation=horizontal]:h-px data-[orientation=horizontal]:w-full data-[orientation=vertical]:h-full data-[orientation=vertical]:w-px\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Separator }\n",
    "./src/routeTree.gen.ts": "/* eslint-disable */\n\n// @ts-nocheck\n\n// noinspection JSUnusedGlobalSymbols\n\n// This file was automatically generated by TanStack Router.\n// You should NOT make any changes in this file as it will be overwritten.\n// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.\n\n// Import Routes\n\nimport { Route as rootRoute } from './routes/__root'\nimport { Route as IndexImport } from './routes/index'\n\n// Create/Update Routes\n\nconst IndexRoute = IndexImport.update({\n  id: '/',\n  path: '/',\n  getParentRoute: () => rootRoute,\n} as any)\n\n// Populate the FileRoutesByPath interface\n\ndeclare module '@tanstack/react-router' {\n  interface FileRoutesByPath {\n    '/': {\n      id: '/'\n      path: '/'\n      fullPath: '/'\n      preLoaderRoute: typeof IndexImport\n      parentRoute: typeof rootRoute\n    }\n  }\n}\n\n// Create and export the route tree\n\nexport interface FileRoutesByFullPath {\n  '/': typeof IndexRoute\n}\n\nexport interface FileRoutesByTo {\n  '/': typeof IndexRoute\n}\n\nexport interface FileRoutesById {\n  __root__: typeof rootRoute\n  '/': typeof IndexRoute\n}\n\nexport interface FileRouteTypes {\n  fileRoutesByFullPath: FileRoutesByFullPath\n  fullPaths: '/'\n  fileRoutesByTo: FileRoutesByTo\n  to: '/'\n  id: '__root__' | '/'\n  fileRoutesById: FileRoutesById\n}\n\nexport interface RootRouteChildren {\n  IndexRoute: typeof IndexRoute\n}\n\nconst rootRouteChildren: RootRouteChildren = {\n  IndexRoute: IndexRoute,\n}\n\nexport const routeTree = rootRoute\n  ._addFileChildren(rootRouteChildren)\n  ._addFileTypes<FileRouteTypes>()\n\n/* ROUTE_MANIFEST_START\n{\n  \"routes\": {\n    \"__root__\": {\n      \"filePath\": \"__root.tsx\",\n      \"children\": [\n        \"/\"\n      ]\n    },\n    \"/\": {\n      \"filePath\": \"index.tsx\"\n    }\n  }\n}\nROUTE_MANIFEST_END */\n",
    "./src/routes/__root.tsx": "import {\n  Outlet,\n  HeadContent,\n  Scripts,\n  createRootRoute,\n} from \"@tanstack/react-router\";\nimport { TanStackRouterDevtools } from \"@tanstack/react-router-devtools\";\n\nimport appCss from \"../styles.css?url\";\n\nexport const Route = createRootRoute({\n  head: () => ({\n    meta: [\n      {\n        charSet: \"utf-8\",\n      },\n      {\n        name: \"viewport\",\n        content: \"width=device-width, initial-scale=1\",\n      },\n      {\n        title: \"TanStack Start Starter\",\n      },\n    ],\n    links: [\n      {\n        rel: \"stylesheet\",\n        href: appCss,\n      },\n    ],\n  }),\n\n  component: () => (\n    <RootDocument>\n      <Outlet />\n      <TanStackRouterDevtools />\n    </RootDocument>\n  ),\n});\n\nfunction RootDocument({ children }: { children: React.ReactNode }) {\n  return (\n    <html lang=\"en\">\n      <head>\n        <HeadContent />\n      </head>\n      <body>\n        {children}\n        <Scripts />\n      </body>\n    </html>\n  );\n}\n",
    "./src/routes/index.tsx": "import { createFileRoute } from \"@tanstack/react-router\";\nimport { allJobs, allEducations } from \"content-collections\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Checkbox } from \"@/components/ui/checkbox\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Separator } from \"@/components/ui/separator\";\nimport {\n  HoverCard,\n  HoverCardContent,\n  HoverCardTrigger,\n} from \"@/components/ui/hover-card\";\nimport { useState, useMemo } from \"react\";\nimport { marked } from \"marked\";\n\nexport const Route = createFileRoute(\"/\")({\n  component: App,\n});\n\nfunction App() {\n  const [selectedTags, setSelectedTags] = useState<string[]>([]);\n\n  // Get unique tags from all jobs\n  const allTags = useMemo(() => {\n    const tags = new Set<string>();\n    allJobs.forEach((job) => {\n      job.tags.forEach((tag) => tags.add(tag));\n    });\n    return Array.from(tags).sort();\n  }, []);\n\n  // Filter jobs based on selected tags\n  const filteredJobs = useMemo(() => {\n    if (selectedTags.length === 0) return allJobs;\n    return allJobs.filter((job) =>\n      selectedTags.some((tag) => job.tags.includes(tag))\n    );\n  }, [selectedTags]);\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-b from-gray-50 to-gray-100\">\n      <div className=\"flex\">\n        {/* Sidebar with filters */}\n        <div className=\"w-72 min-h-screen bg-white border-r shadow-sm p-8 sticky top-0\">\n          <h3 className=\"text-lg font-semibold mb-6 text-gray-900\">\n            Skills & Technologies\n          </h3>\n          <div className=\"space-y-4\">\n            {allTags.map((tag) => (\n              <div key={tag} className=\"flex items-center space-x-3 group\">\n                <Checkbox\n                  id={tag}\n                  checked={selectedTags.includes(tag)}\n                  onCheckedChange={(checked) => {\n                    if (checked) {\n                      setSelectedTags([...selectedTags, tag]);\n                    } else {\n                      setSelectedTags(selectedTags.filter((t) => t !== tag));\n                    }\n                  }}\n                  className=\"data-[state=checked]:bg-blue-600\"\n                />\n                <label\n                  htmlFor={tag}\n                  className=\"text-sm font-medium leading-none text-gray-700 group-hover:text-gray-900 transition-colors cursor-pointer\"\n                >\n                  {tag}\n                </label>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        {/* Main content */}\n        <div className=\"flex-1 p-8 lg:p-12\">\n          <div className=\"max-w-4xl mx-auto space-y-12\">\n            <div className=\"text-center space-y-4\">\n              <h1 className=\"text-5xl font-bold bg-gradient-to-r from-gray-900 via-gray-800 to-gray-900 bg-clip-text text-transparent\">\n                My Resume\n              </h1>\n              <p className=\"text-gray-600 text-lg\">\n                Professional Experience & Education\n              </p>\n              <Separator className=\"mt-8\" />\n            </div>\n\n            {/* Career Summary */}\n            <Card className=\"border-0 shadow-lg bg-white/50 backdrop-blur-sm\">\n              <CardHeader>\n                <CardTitle className=\"text-2xl text-gray-900\">\n                  Career Summary\n                </CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"flex items-center gap-8\">\n                  <p className=\"text-gray-700 flex-1 leading-relaxed\">\n                    I am a passionate and driven professional seeking\n                    opportunities that will leverage my extensive experience in\n                    frontend development while providing continuous growth and\n                    learning opportunities. My goal is to contribute to\n                    innovative projects that challenge me to expand my skill set\n                    and make meaningful impacts through technology.\n                  </p>\n                  <img\n                    src=\"/headshot-on-white.jpg\"\n                    alt=\"Professional headshot\"\n                    className=\"w-44 h-52 rounded-2xl object-cover shadow-md transition-transform hover:scale-105\"\n                  />\n                </div>\n              </CardContent>\n            </Card>\n\n            {/* Work Experience */}\n            <section className=\"space-y-6\">\n              <h2 className=\"text-3xl font-semibold text-gray-900\">\n                Work Experience\n              </h2>\n              <div className=\"space-y-6\">\n                {filteredJobs.map((job) => (\n                  <Card\n                    key={job.jobTitle}\n                    className=\"border-0 shadow-md hover:shadow-lg transition-shadow\"\n                  >\n                    <CardHeader>\n                      <div className=\"flex justify-between items-start\">\n                        <div className=\"space-y-2\">\n                          <CardTitle className=\"text-xl text-gray-900\">\n                            {job.jobTitle}\n                          </CardTitle>\n                          <p className=\"text-blue-600 font-medium\">\n                            {job.company} - {job.location}\n                          </p>\n                        </div>\n                        <Badge variant=\"secondary\" className=\"text-sm\">\n                          {job.startDate} - {job.endDate || \"Present\"}\n                        </Badge>\n                      </div>\n                    </CardHeader>\n                    <CardContent>\n                      <p className=\"text-gray-700 mb-6 leading-relaxed\">\n                        {job.summary}\n                      </p>\n                      <div className=\"flex flex-wrap gap-2\">\n                        {job.tags.map((tag) => (\n                          <HoverCard key={tag}>\n                            <HoverCardTrigger>\n                              <Badge\n                                variant=\"outline\"\n                                className=\"hover:bg-gray-100 transition-colors cursor-pointer\"\n                              >\n                                {tag}\n                              </Badge>\n                            </HoverCardTrigger>\n                            <HoverCardContent className=\"w-64\">\n                              <p className=\"text-sm text-gray-600\">\n                                Experience with {tag} in professional\n                                development\n                              </p>\n                            </HoverCardContent>\n                          </HoverCard>\n                        ))}\n                      </div>\n                      {job.content && (\n                        <div\n                          className=\"mt-6 text-gray-700 prose prose-sm max-w-none\"\n                          dangerouslySetInnerHTML={{\n                            __html: marked(job.content),\n                          }}\n                        />\n                      )}\n                    </CardContent>\n                  </Card>\n                ))}\n              </div>\n            </section>\n\n            {/* Education */}\n            <section className=\"space-y-6\">\n              <h2 className=\"text-3xl font-semibold text-gray-900\">\n                Education\n              </h2>\n              <div className=\"space-y-6\">\n                {allEducations.map((education) => (\n                  <Card\n                    key={education.school}\n                    className=\"border-0 shadow-md hover:shadow-lg transition-shadow\"\n                  >\n                    <CardHeader>\n                      <CardTitle className=\"text-xl text-gray-900\">\n                        {education.school}\n                      </CardTitle>\n                    </CardHeader>\n                    <CardContent>\n                      <p className=\"text-gray-700 leading-relaxed\">\n                        {education.summary}\n                      </p>\n                      {education.content && (\n                        <div\n                          className=\"mt-6 text-gray-700 prose prose-sm max-w-none\"\n                          dangerouslySetInnerHTML={{\n                            __html: marked(education.content),\n                          }}\n                        />\n                      )}\n                    </CardContent>\n                  </Card>\n                ))}\n              </div>\n            </section>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n",
    "./tsconfig.json": "{\n  \"include\": [\"**/*.ts\", \"**/*.tsx\"],\n  \"compilerOptions\": {\n    \"target\": \"ES2022\",\n    \"jsx\": \"react-jsx\",\n    \"module\": \"ESNext\",\n    \"lib\": [\"ES2022\", \"DOM\", \"DOM.Iterable\"],\n    \"types\": [\"vite/client\"],\n\n    /* Bundler mode */\n    \"moduleResolution\": \"bundler\",\n    \"allowImportingTsExtensions\": true,\n    \"verbatimModuleSyntax\": true,\n    \"noEmit\": true,\n\n    /* Linting */\n    \"skipLibCheck\": true,\n    \"strict\": true,\n    \"noUnusedLocals\": true,\n    \"noUnusedParameters\": true,\n    \"noFallthroughCasesInSwitch\": true,\n    \"noUncheckedSideEffectImports\": true,\n    \"baseUrl\": \".\",\n    \"paths\": {\n      \"content-collections\": [\"./.content-collections/generated\"],\n      \"@/*\": [\"./src/*\"]\n    }\n  }\n}\n"
  },
  "deletedFiles": [
    "./src/components/Header.tsx",
    "./src/routes/api.demo-names.ts",
    "./src/routes/demo.start.api-request.tsx",
    "./src/routes/demo.start.server-funcs.tsx"
  ]
}
