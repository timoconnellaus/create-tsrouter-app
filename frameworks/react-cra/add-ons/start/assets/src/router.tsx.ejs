import { createRouter as createTanstackRouter } from '@tanstack/react-router'<% if (addOnEnabled['tanstack-query']) { %>
  import { setupRouterSsrQueryIntegration } from '@tanstack/react-router-ssr-query'
  import * as TanstackQuery from "./integrations/tanstack-query/root-provider";
  <% } %>

// Import the generated route tree
import { routeTree } from './routeTree.gen'

// Create a new router instance
export const createRouter = () => {
  <% if (addOnEnabled['tanstack-query']) { %>
    const rqContext = TanstackQuery.getContext();

    const router = createTanstackRouter({
        routeTree,
        context: { ...rqContext },
        defaultPreload: "intent",
        Wrap: (props: { children: React.ReactNode }) => {
          return (
            <TanstackQuery.Provider {...rqContext}>
              {props.children}
            </TanstackQuery.Provider>
          );
        },
      })

    setupRouterSsrQueryIntegration({router, queryClient: rqContext.queryClient})

    return router;

    <% } else { %>
  return createTanstackRouter({
    routeTree,
    scrollRestoration: true,
    defaultPreloadStaleTime: 0,
  })
  <% } %>
}

// Register the router instance for type safety
declare module '@tanstack/react-router' {
  interface Register {
    router: ReturnType<typeof createRouter>
  }
}
