import { defineConfig } from 'vite'
import { tanstackStart } from '@tanstack/react-start/plugin/vite';
import viteReact from '@vitejs/plugin-react'
import viteTsConfigPaths from 'vite-tsconfig-paths'<% if (tailwind) { %>
import tailwindcss from "@tailwindcss/vite"
<% } %><% if (addOnEnabled.sentry) { %>
import { wrapVinxiConfigWithSentry } from "@sentry/tanstackstart-react";
<% } %><% if (addOnEnabled.neon) { %>
import postgresPlugin from "@neondatabase/vite-plugin-postgres";
<% } %>
const config = defineConfig({
    plugins: [
      <% if (addOnEnabled.neon) { %>
        postgresPlugin({
          seed: {
            type: "sql-script",
            path: "db/init.sql"
          },
          referrer: 'create-tanstack'
        }),
      <% } %>
      // this is the plugin that enables path aliases
      viteTsConfigPaths({
        projects: ['./tsconfig.json'],
      }),
      <% if (tailwind) { %>tailwindcss(),<% } %>
      tanstackStart({
        customViteReactPlugin: true,
      }),
      viteReact(),
    ],
})

<% if (addOnEnabled.sentry) { %>
export default wrapVinxiConfigWithSentry(config, {
  org: process.env.VITE_SENTRY_ORG,
  project: process.env.VITE_SENTRY_PROJECT,
  authToken: process.env.SENTRY_AUTH_TOKEN,
  // Only print logs for uploading source maps in CI
  // Set to `true` to suppress logs
  silent: !process.env.CI,
});<% } else { %>
export default config
<% } %>