import { createFileRoute, useRouter } from '@tanstack/react-router'
import { createServerFn } from '@tanstack/react-start'
import { db } from '../db'
import { users } from '../db/schema'

const getUsers = createServerFn({
  method: 'GET',
}).handler(async () => {
  try {
    const result = await db.select().from(users)
    return result
  } catch (error) {
    console.error('Error loading users:', error)
    return []
  }
})

const addUser = createServerFn({ method: 'POST' })
  .validator((data: { name: string; email: string }) => data)
  .handler(async ({ data }) => {
    try {
      await db.insert(users).values({
        name: data.name,
        email: data.email,
      })
    } catch (error) {
      console.error('Error adding user:', error)
      throw error
    }
  })

export const Route = createFileRoute('/demo/drizzle')({
  component: DrizzleDemo,
  loader: async () => await getUsers(),
})

function DrizzleDemo() {
  const router = useRouter()
  const userList = Route.useLoaderData()

  const handleAddUser = async () => {
    const name = `User ${Date.now()}`
    const email = `user${Date.now()}@example.com`
    
    try {
      await addUser({ data: { name, email } })
      router.invalidate()
    } catch (error) {
      console.error('Error adding user:', error)
    }
  }

  return (
    <div className="p-6">
      <h1 className="text-2xl font-bold mb-4">Drizzle ORM Demo</h1>
      <p className="mb-4">
        Database: <strong><%= addOnOption.drizzle.database %></strong>
      </p>
      
      <div className="flex gap-4 mb-6">
        <button
          onClick={handleAddUser}
          className="px-4 py-2 bg-green-500 text-white rounded hover:bg-green-600"
        >
          Add User
        </button>
      </div>

      <div>
        <h2 className="text-xl font-semibold mb-2">Users ({userList.length})</h2>
        {userList.length === 0 ? (
          <p className="text-gray-500">No users found. Click "Add User" to create one.</p>
        ) : (
          <ul className="space-y-2">
            {userList.map((user) => (
              <li key={user.id} className="p-2 bg-gray-100 rounded">
                <strong>#{user.id}</strong> - {user.name} ({user.email})
              </li>
            ))}
          </ul>
        )}
      </div>
    </div>
  )
}